<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Rooms">

	<resultMap type="RequestStayRsv" id="requestStayRsvResultSet">
		<result property="rsvReq" column="RSV_REQ" />
		<result property="reqDate" column="REQ_DATE" />
		<result property="reqContent" column="REQ_CONTENT" />
		<result property="hdrDate" column="HDR_DATE" />
		<result property="hdrStatus" column="HDR_STATUS" />
	</resultMap>

	<resultMap type="RoomList" id="roomListSet">
		<id property="rmNo" column="RM_NO" />
		<result property="rmNum" column="RM_NUM" />
		<result property="floor" column="FLOOR" />
		<result property="rmStatus" column="RM_STATUS" />
		<result property="rtNo" column="RT_NO" />
		<result property="rtName" column="RT_NAME" />
		<result property="cleanStatus" column="CLEAN_STATUS" />
		<result property="reservmno" column="RMNO" />
		<result property="reservname" column="RNAME" />
		<result property="smno" column="SMNO" />
		<result property="sname" column="SNAME" />
		<result property="stayNo" column="STAY_NO" />
		<result property="scheckin" column="S_CHECKIN" />
		<result property="scheckout" column="S_CHECKOUT" />
		<result property="stayStatus" column="STAY_STATUS" />
		<result property="stayType" column="STAY_TYPE" />
		<result property="stayPrice" column="STAY_PRICE" />
		<result property="rsvNo" column="RSV_NO" />
		<result property="rcheckin" column="R_CHECKIN" />
		<result property="rcheckout" column="R_CHECKOUT" />
		<result property="rsvPrice" column="RSV_PRICE" />
		<result property="rsvStatus" column="RSV_STATUS" />
		<result property="ciTime" column="CI_TIME" />
		<result property="nsUnit" column="NS_UNIT" />
		<result property="brkBegin" column="BRK_BEGIN" />
		<result property="brkEnd" column="BRK_END" />
		<result property="brkRsn" column="BRK_RSN" />
		<result property="realCI" column="REAL_CI" />
		<result property="stdPer" column="STD_PER" />
		<result property="maxPer" column="MAXPER" />
		<result property="reservphone" column="RPHONE" />
		<result property="sphone" column="SPHONE" />
	</resultMap>
	
	<resultMap type="RoomPrice" id="roomPriceSet">
		<id property="rpNo" column="RPNO" />
		<result property="rtNo" column="RT_NO" />
		<result property="termType" column="TERM_TYPE" />
		<result property="dayType" column="DAY_TYPE" />
		<result property="stayType" column="STAY_TYPE" />
		<result property="price" column="PRICE" />
		<result property="regDate" column="REG_DATE" />
	</resultMap>
	
	<resultMap type="Member" id="memberSet">
		<id property="mno" column="MNO" />
		<result property="userName" column="NAME" />
		<result property="phone" column="PHONE" />
		<result property="email" column="EMAIL" />
		<result property="status" column="STATUS" />
	</resultMap>
	
	<resultMap type="ServiceList" id="serviceSet">
		<id property="svcCode" column="SVC_CODE" />
		<result property="svcName" column="SVC_NAME" />
		<result property="salesType" column="SALES_TYPE" />
		<result property="svcPrice" column="SVC_PRICE" />
		<result property="regDate" column="REG_DATE" />
		<result property="svcStatus" column="SVC_STATUS" />
	</resultMap>
	
	<resultMap type="com.kh.hotels.mngRooms.model.vo.RuleInfo" id="ruleInfoSet">
		<id property="hotelName" column="HNAME" />
		<result property="svcRate" column="SVC_RATE" />
		<result property="nsUnit" column="NS_UNIT" />
		<result property="ltUnit" column="LENT_UNIT" />
		<result property="serviceRate" column="serviceRate" />
		<result property="nsRate" column="NS_RATE" />
	</resultMap>
	
	<resultMap type="com.kh.hotels.mngRooms.model.vo.BrokenRoom" id="brkRoomSet">
		<result property="rmNo" column="RM_NUM" />
		<result property="brkBegin" column="BRK_BEGIN" />
		<result property="brkEnd" column="BRK_END" />
		<result property="brkRsn" column="BRK_RSN" />
		<result property="userName" column="NAME" />
		<result property="brkStatus" column="BRK_STATUS" />
	</resultMap>
	
	<resultMap type="com.kh.hotels.mngRooms.model.vo.ModalClient" id="stayInfoSet">
		<id property="stayNo" column="STAY_NO" />
		<result property="scheckin" column="SCHECKIN" />
		<result property="scheckout" column="SCHECKOUT" />
		<result property="stayType" column="STAY_TYPE" />
		<result property="chargePrice" column="PRICE" />
		<result property="payPrice" column="PAYMENT" />
		<result property="stayPer" column="STAY_PER" />
		<result property="clientNo" column="MNO" />
		<result property="clientName" column="NAME" />
		<result property="clientPhone" column="PHONE" />
		<result property="clientEmail" column="EMAIL" />
		<result property="rmNum" column="RM_NUM" />
		<result property="stdPer" column="STD_PER" />
		<result property="roomType" column="RT_NAME" />
		<result property="maxPer" column="MAXPER" />
		<result property="svcNo" column="SVC_NO" />
		<result property="svcName" column="SVC_NAME" />
		<result property="svcPrice" column="SVC_PRICE" />
		<result property="useCnt" column="USE_CNT" />
		<result property="svcDate" column="REGDATE" />
		<result property="pno" column="PNO" />
		<result property="payWay" column="PWAY" />
		<result property="paymentFee" column="PFEE" />
		<result property="payDate" column="PAY_DATE" />
		<result property="rmNo" column="RM_NO" />
		<result property="stayDays" column="STAY_DAYS" />
		<result property="rtNo" column="RT_NO" />
		<result property="svcCode" column="SVC_CODE" />
		<result property="realCI" column="REAL_CI" />
	</resultMap>
	
	<resultMap type="com.kh.hotels.mngRooms.model.vo.ModalClient" id="rsvInfoSet">
		<id property="rsvNo" column="RSV_NO" />
		<result property="scheckin" column="RCHECKIN" />
		<result property="scheckout" column="RCHECKOUT" />
		<result property="chargePrice" column="STAY_PRICE" />
		<result property="payPrice" column="PAYMENT" />
		<result property="stayPer" column="STAY_PER" />
		<result property="clientNo" column="MNO" />
		<result property="clientName" column="NAME" />
		<result property="clientPhone" column="PHONE" />
		<result property="clientEmail" column="EMAIL" />
		<result property="rmNum" column="RM_NUM" />
		<result property="stdPer" column="STD_PER" />
		<result property="roomType" column="RT_NAME" />
		<result property="maxPer" column="MAXPER" />
		<result property="svcNo" column="SVC_NO" />
		<result property="svcName" column="SVC_NAME" />
		<result property="svcPrice" column="SVC_PRICE" />
		<result property="useCnt" column="USE_CNT" />
		<result property="svcDate" column="REGDATE" />
		<result property="pno" column="PNO" />
		<result property="payWay" column="PWAY" />
		<result property="paymentFee" column="PFEE" />
		<result property="payDate" column="PAY_DATE" />
		<result property="rmNo" column="RM_NO" />
		<result property="stayDays" column="PERIOD" />
		<result property="rtNo" column="RT_NO" />
		<result property="svcCode" column="SVC_CODE" />
		<result property="timeCI" column="CI_TIME" />
		<result property="payStatus" column="PAY_STATUS" />
	</resultMap>
	
	<resultMap type="com.kh.hotels.mngRooms.model.vo.Rfd" id="refundInfoSet">
		<id property="rfdNo" column="RFD_NO" />
		<result property="termType" column="TERM_TYPE" />
		<result property="dayType" column="DAY_TYPE" />
		<result property="rfdDate" column="RFD_DATE" />
		<result property="rfdRate" column="RFD_RATE" />
		<result property="hname" column="HNAME" />
		<result property="ltype" column="LTYPE" />
	</resultMap>
	
    <select id="viewRoomList" resultMap="roomListSet">
      SELECT R.RM_NO, R.RM_NUM, R.FLOOR, R.RM_STATUS, T.RT_NO, T.RT_NAME, N.CLEAN_STATUS, S.REAL_CI,
             S.STAY_NO, TO_CHAR(S.CHECKIN, 'yyyy-MM-dd') AS "S_CHECKIN", TO_CHAR(S.CHECKOUT, 'yyyy-MM-dd') AS "S_CHECKOUT", S.STAY_STATUS, S.STAY_TYPE, S.PRICE AS "STAY_PRICE",
             V.RSV_NO, TO_CHAR(V.CHECKIN, 'yyyy-MM-dd') AS "R_CHECKIN", TO_CHAR(V.CHECKOUT, 'yyyy-MM-dd') AS "R_CHECKOUT", V.STAY_PRICE AS "RSV_PRICE", V.RSV_STATUS, V.CI_TIME,
             M1.MNO AS "RMNO", M1.NAME AS "RNAME", M2.MNO AS "SMNO", M2.NAME AS "SNAME", TO_CHAR(B.BRK_BEGIN, 'yyyy-MM-dd') AS "BRK_BEGIN", TO_CHAR(B.BRK_END, 'yyyy-MM-dd') AS "BRK_END",
             BRK_RSN, R.STD_PER, T.MAXPER, M1.PHONE AS "RPHONE", M2.PHONE AS "SPHONE"
      FROM ROOM R
      LEFT JOIN ROOM_TYPE T ON (R.RT_NO = T.RT_NO)
      LEFT JOIN ROOM_STT N ON (R.RM_NO = N.RM_NO)
      LEFT JOIN (SELECT *
                 FROM STAY
                 WHERE TO_CHAR(CHECKIN, 'YYYY-MM-DD') <![CDATA[ <= ]]> TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD')
                 AND TO_CHAR(CHECKOUT, 'YYYY-MM-DD') <![CDATA[ >= ]]> TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD')
                 AND STAY_STATUS = 'N') S ON (R.RM_NO = S.RM_NO)
      LEFT JOIN (SELECT *
                 FROM RSV
                 WHERE TO_CHAR(CHECKIN, 'YYYY-MM-DD') <![CDATA[ <= ]]> TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD')
                 AND RSV_STATUS = 'OK') V ON (R.RM_NO = V.RM_NO)
      LEFT JOIN MEMBER M1 ON (V.MNO = M1.MNO)
      LEFT JOIN MEMBER M2 ON (S.MNO = M2.MNO)
        LEFT JOIN (SELECT RM_NO, BRK_BEGIN, BRK_END, BRK_RSN
                   FROM ROOM
                   LEFT JOIN BROKEN_HIS USING (RM_NO)
                   WHERE TO_CHAR(BRK_BEGIN, 'YYYY-MM-DD') <![CDATA[ <= ]]> TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD')
                   AND TO_CHAR(BRK_END, 'YYYY-MM-DD') <![CDATA[ >= ]]> TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD')
                   AND BRK_STATUS = 'Y') B ON (R.RM_NO = B.RM_NO)
      WHERE R.RM_STATUS = 'Y'
      ORDER BY FLOOR, RM_NUM
   </select>
	
	<select id="viewRoomPrice" resultMap="roomPriceSet">
		SELECT *
		FROM PRC
	</select>

	<select id="viewServiceList" resultMap="serviceSet">
		SELECT *
		FROM SVC
		WHERE SVC_STATUS = 'Y'
	</select>
	
	<select id="viewRuleInfo" resultMap="ruleInfoSet">
		SELECT I.HNAME, N.NS_UNIT, N.NS_RATE, C.SVC_RATE, B.LENT_UNIT
		FROM INFO I
		JOIN NOSHOW N ON (I.HNAME = N.HNAME)
		JOIN CAL C ON (I.HNAME = C.HNAME)
		JOIN BASIC B ON (I.HNAME = B.HNAME)
	</select>
	
	<select id="viewRefundRate" resultMap="refundInfoSet">
		SELECT *
		FROM RFD
		WHERE TERM_TYPE = CASE
		                    WHEN EXTRACT(MONTH FROM (SYSDATE + 9 / (24) + 135 / (24 * 60 * 60))) IN (1, 2, 7, 8, 12) THEN 'SEASON'
		                    ELSE 'OFFSEASON'
		                  END
		AND DAY_TYPE = CASE
		                WHEN TO_CHAR((SYSDATE + 9 / (24) + 135 / (24 * 60 * 60)), 'd') IN (1, 6, 7) THEN 'WEEKEND'
		                ELSE 'WEEK'
		               END
		AND RFD_DATE = 0
	</select>
	
	<select id="ajxFindClient" resultMap="memberSet" parameterType="java.lang.String">
		SELECT MNO, NAME, PHONE, EMAIL, STATUS
		FROM MEMBER
		WHERE STATUS = 'Y'
		AND TYPE = 'CLIENT'
		AND NAME LIKE '%'||#{ searchName }||'%'
		AND NAME NOT LIKE '%-%'
	</select>
	
	<insert id="ajxInsertClient" parameterType="com.kh.hotels.mngRooms.model.vo.CheckIn">
		INSERT INTO MEMBER
		VALUES (SEQ_MNO.NEXTVAL, #{clientName}, #{clientPhone}, #{clientEmail}, DEFAULT, 'CLIENT', NULL)
	</insert>
	
	<select id="ajxFindTempClient" resultMap="memberSet" parameterType="java.lang.String">
		SELECT *
		FROM MEMBER
		WHERE NAME LIKE '%'||#{hipen}||'%'
		AND STATUS = 'Y'
		AND TYPE = 'CLIENT'
	</select>
	
	<insert id="insertTempMember" parameterType="com.kh.hotels.mngRooms.model.vo.CheckIn">
		INSERT INTO MEMBER
		VALUES (SEQ_MNO.NEXTVAL, #{clientName}, #{clientPhone}, #{clientEmail}, DEFAULT, 'CLIENT', 'TEMP')
	</insert>
	
	<select id="selectMno" resultType="_int" parameterType="java.lang.String">
		SELECT MNO
		FROM MEMBER
		WHERE NAME = #{clientName}
	</select>
	
	<insert id="insertCIstay" parameterType="com.kh.hotels.mngRooms.model.vo.CheckIn">
		INSERT INTO STAY
		VALUES (SEQ_STAY_NO.NEXTVAL, #{selRoomNum}, #{clientNo}, TO_DATE(#{checkinTime}, 'yyyy-MM-dd'),
				TO_DATE(#{checkoutTime}, 'yyyy-MM-dd'), DEFAULT, #{lentYN}, #{totalPrc}, #{totalPay},
				TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), NULL, TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), NULL, #{personCnt})
	</insert>
	
	<insert id="insertCIstayHis">
		INSERT INTO STAY_HIS
		VALUES (SEQ_STAY_NO.CURRVAL, TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), 'ALL', 'NONE', 'ALL', 'INSERT')
	</insert>
	
	<insert id="insertCIpayment" parameterType="com.kh.hotels.mngRooms.model.vo.CheckIn">
		INSERT INTO PAYMENT
		VALUES (SEQ_PNO.NEXTVAL, #{payWay}, #{payWayMoney}, TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), 'DONE', TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), 'N', NULL, SEQ_STAY_NO.CURRVAL)
	</insert>
	
	<insert id="insertCIsvcuse" parameterType="com.kh.hotels.mngRooms.model.vo.CheckIn">
		INSERT INTO SVC_USE
		VALUES (SEQ_STAY_NO.CURRVAL, #{svcCode}, #{svcCount}, DEFAULT, TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), SEQ_SVC_NO.NEXTVAL, NULL)
	</insert>
	
	<insert id="insertCIsvcuseHis" parameterType="com.kh.hotels.mngRooms.model.vo.CheckIn">
		INSERT INTO SVC_USE_HIS
		VALUES (SEQ_SVC_NO.CURRVAL, 'ALL', 'NONE', 'ALL', TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), 'INSERT')
	</insert>
	
	<select id="ajxFindBrokenHis" parameterType="_int" resultMap="brkRoomSet">
		SELECT R.RM_NUM, B.BRK_BEGIN, B.BRK_END, B.BRK_RSN, M.NAME, B.BRK_STATUS
		FROM BROKEN_HIS B
		JOIN MEMBER M ON (B.MNO = M.MNO)
		JOIN ROOM R ON (B.RM_NO = R.RM_NO)
		WHERE B.RM_NO = #{rmNo}
		AND TO_CHAR(BRK_BEGIN, 'YYYY-MM-DD') <![CDATA[ <= ]]> TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD')
		AND TO_CHAR(BRK_END, 'YYYY-MM-DD') <![CDATA[ >= ]]> TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD')
		AND BRK_STATUS = 'Y'
	</select>
	
	<update id="ajxUpdateBrkStt" parameterType="_int">
		UPDATE BROKEN_HIS
		SET BRK_STATUS = 'N', BRK_END = (SYSDATE + 9 / (24) + 135 / (24 * 60 * 60))
		WHERE RM_NO = #{rmNo}
		AND TO_CHAR(BRK_BEGIN, 'YYYY-MM-DD') <![CDATA[ <= ]]> TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD')
		AND TO_CHAR(BRK_END, 'YYYY-MM-DD') <![CDATA[ >= ]]> TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD')
		AND BRK_STATUS = 'Y'
	</update>
	
	<update id="ajxUpdateRoomClean" parameterType="_int">
		UPDATE ROOM_STT
		SET CLEAN_STATUS = 'Y'
		WHERE RM_NO = #{rmNo}
	</update>
	
	<insert id="ajxUpdateRoomCleanHis" parameterType="_int">
		INSERT INTO ROOM_STT_HIS
		VALUES (#{rmNo}, 'N', 'Y', TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), 'CLEAN')
	</insert>
	
	<update id="ajxUpdateRoomNoClean" parameterType="_int">
		UPDATE ROOM_STT
		SET CLEAN_STATUS = 'N'
		WHERE RM_NO = #{rmNo}
	</update>
	
	<insert id="ajxUpdateRoomNoCleanHis" parameterType="_int">
		INSERT INTO ROOM_STT_HIS
		VALUES (#{rmNo}, 'Y', 'N', TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), 'UNCLEAN')
	</insert>
	
	<update id="ajxUpdateAllRoomSttClean" parameterType="java.util.ArrayList">
		UPDATE ROOM_STT
		SET CLEAN_STATUS = 'N'
		WHERE RM_NO IN (SELECT RM_NO
		               FROM ROOM
		               WHERE FLOOR IN
		               <foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item}</foreach>)
	</update>
	
	<update id="ajxUpdateAllRoomSttNoClean" parameterType="java.util.ArrayList">
		UPDATE ROOM_STT
		SET CLEAN_STATUS = 'Y'
		WHERE RM_NO IN (SELECT RM_NO
		               FROM ROOM
		               WHERE FLOOR IN
		               <foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item}</foreach>)
	</update>
	
	<select id="ajxSelectStayInfo" parameterType="_int" resultMap="stayInfoSet">
		SELECT S.STAY_NO, TO_CHAR(S.CHECKIN, 'YYYY-MM-DD') AS "SCHECKIN", TO_CHAR(S.CHECKOUT, 'YYYY-MM-DD') AS "SCHECKOUT", S.STAY_TYPE, S.PRICE, S.PAYMENT, S.STAY_PER,
		       R.RM_NO, M.MNO, M.NAME, M.PHONE, M.EMAIL, R.RM_NUM, R.STD_PER, T.RT_NAME, T.MAXPER, (S.CHECKOUT - S.CHECKIN) AS "STAY_DAYS", T.RT_NO, S.REAL_CI
		FROM STAY S
		JOIN MEMBER M ON (S.MNO = M.MNO)
		JOIN ROOM R ON (S.RM_NO = R.RM_NO)
		JOIN ROOM_TYPE T ON (R.RT_NO = T.RT_NO)
		WHERE S.STAY_STATUS = 'N'
		AND S.STAY_NO = #{stayNo}
		AND M.STATUS = 'Y'
		AND M.TYPE = 'CLIENT'
		AND R.RM_STATUS = 'Y'
	</select>
	
	<select id="ajxSelectStaySvc" parameterType="_int" resultMap="stayInfoSet">
		SELECT S.STAY_NO, C0.SVC_NO, C1.SVC_NAME, C1.SVC_PRICE, C0.USE_CNT, SUBSTR(C0.REG_DATE, 6, 5) AS "REGDATE", C0.REG_DATE, C1.SVC_CODE
		FROM STAY S
		JOIN SVC_USE C0 ON (S.STAY_NO = C0.STAY_NO)
		JOIN SVC C1 ON (C0.SVC_CODE = C1.SVC_CODE)
		WHERE S.STAY_STATUS = 'N'
		AND S.STAY_NO = #{stayNo}
		ORDER BY REG_DATE
	</select>
	
	<select id="ajxSelectStayPay" parameterType="_int" resultMap="stayInfoSet">
		SELECT S.STAY_NO, P.PNO, P.PWAY, P.PRICE AS "PFEE", P.PAY_DATE
		FROM STAY S
		LEFT JOIN PAYMENT P ON (S.STAY_NO = P.STAY_NO)
		WHERE S.STAY_STATUS = 'N'
		AND S.STAY_NO = #{stayNo}
		ORDER BY PAY_DATE
	</select>
	
	<select id="ajxSelectRsvInfo" parameterType="java.lang.String" resultMap="rsvInfoSet">
		SELECT V.RSV_NO, TO_CHAR(V.CHECKIN, 'YYYY-MM-DD') AS "RCHECKIN", TO_CHAR(V.CHECKOUT, 'YYYY-MM-DD') AS "RCHECKOUT", V.STAY_PRICE, V.STAY_PRICE AS "PAYMENT",
		       (V.ADULT + V.CHILD) AS "STAY_PER", V.CI_TIME,
		       R.RM_NO, M.MNO, M.NAME, M.PHONE, M.EMAIL, R.RM_NUM, R.STD_PER, T.RT_NAME, T.MAXPER, (V.CHECKOUT - V.CHECKIN) AS "PERIOD", T.RT_NO
		FROM RSV V
		JOIN MEMBER M ON (V.MNO = M.MNO)
		JOIN ROOM R ON (V.RM_NO = R.RM_NO)
		JOIN ROOM_TYPE T ON (R.RT_NO = T.RT_NO)
		WHERE V.RSV_NO = #{rsvNo}
		AND M.STATUS = 'Y'
		AND M.TYPE = 'CLIENT'
		AND R.RM_STATUS = 'Y'
	</select>
	
	<select id="ajxSelectRsvSvc" parameterType="java.lang.String" resultMap="rsvInfoSet">
		SELECT V.RSV_NO, C0.SVC_NO, C1.SVC_NAME, C1.SVC_PRICE, C0.USE_CNT, SUBSTR(C0.REG_DATE, 6, 5) AS "REGDATE", C0.REG_DATE, C1.SVC_CODE
		FROM RSV V
		JOIN SVC_USE C0 ON (V.RSV_NO = C0.RSV_NO)
		JOIN SVC C1 ON (C0.SVC_CODE = C1.SVC_CODE)
		WHERE V.RSV_NO = #{rsvNo}
		ORDER BY REG_DATE
	</select>
	
	<select id="ajxSelectRsvPay" parameterType="java.lang.String" resultMap="rsvInfoSet">
		SELECT V.RSV_NO, P.PNO, P.PWAY, P.PRICE AS "PFEE", P.PAY_DATE, P.PAY_STATUS
		FROM RSV V
		LEFT JOIN PAYMENT P ON (V.RSV_NO = P.RSV_NO)
		WHERE V.RSV_NO = #{rsvNo}
		ORDER BY PAY_DATE
	</select>
	
	<update id="cancelReservRSV" parameterType="com.kh.hotels.mngRooms.model.vo.Rfd">
		UPDATE RSV
		<choose>
		<when test="rfdType == 0">
		SET RSV_STATUS = 'REFUND'
		</when>
		<when test="rfdType == 1">
		SET RSV_STATUS = 'NOSHOW'
		</when>
		</choose>
		WHERE RSV_NO = #{reservNo}
	</update>
	
	<insert id="cancelReservRSVhis" parameterType="com.kh.hotels.mngRooms.model.vo.Rfd">
		INSERT INTO RSV_HIS
		<choose>
		<when test="rfdType == 0">
		VALUES (#{reservNo}, TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), 'RSV_STATUS', 'OK', 'REFUND', '예약취소')
		</when>
		<when test="rfdType == 1">
		VALUES (#{reservNo}, TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), 'RSV_STATUS', 'OK', 'NOSHOW', '고객노쇼')
		</when>
		</choose>
		
	</insert>
	
	<update id="cancelReservSVC" parameterType="com.kh.hotels.mngRooms.model.vo.Rfd">
		UPDATE SVC_USE
		SET USE_STATUS = 'N'
		WHERE RSV_NO = #{reservNo}
	</update>
	
	<select id="cancelReservFindSvc" resultType="_int" parameterType="com.kh.hotels.mngRooms.model.vo.Rfd">
		SELECT SVC_NO
		FROM SVC_USE
		WHERE RSV_NO = #{reservNo}
	</select>
	
	<insert id="cancelReservSVChis" parameterType="com.kh.hotels.mngRooms.model.vo.Rfd">
		INSERT INTO SVC_USE_HIS
		<choose>
		<when test="rfdType == 0">
		VALUES (#{svcNo}, 'USE_STATUS', 'Y', 'N', TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), '예약취소')
		</when>
		<when test="rfdType == 1">
		VALUES (#{svcNo}, 'USE_STATUS', 'Y', 'N', TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), '고객노쇼')
		</when>
		</choose>
	</insert>
	
	<insert id="cancelReservRFD" parameterType="com.kh.hotels.mngRooms.model.vo.Rfd">
		INSERT INTO PAYMENT
		VALUES (SEQ_PNO.NEXTVAL, 'ACCOUNT', #{rfdMoney}, #{payDate}, 'REFUND', TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), 'Y', #{reservNo}, NULL)
	</insert>
	
	<insert id="insertRsvCheckIn" parameterType="com.kh.hotels.mngRooms.model.vo.CheckIn">
		INSERT INTO STAY
		VALUES (SEQ_STAY_NO.NEXTVAL, #{selRoomNumm}, #{clientNo}, TO_DATE(#{checkinTime}, 'yyyy-MM-dd'),
				TO_DATE(#{checkoutTime}, 'yyyy-MM-dd'), DEFAULT, #{lentYN}, #{totalPrc}, #{totalPay},
				TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), #{rsvNo}, TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), NULL, #{personCnt})
	</insert>
	
	<update id="updateRsvPayment" parameterType="com.kh.hotels.mngRooms.model.vo.CheckIn">
		UPDATE PAYMENT
		SET STAY_NO = SEQ_STAY_NO.CURRVAL, MOD_DATE = TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss')
		WHERE RSV_NO = #{rsvNo}
	</update>
	
	<update id="updateRsvSvc" parameterType="com.kh.hotels.mngRooms.model.vo.CheckIn">
		UPDATE SVC_USE
		SET STAY_NO = SEQ_STAY_NO.CURRVAL
		WHERE RSV_NO = #{rsvNo}
	</update> 
	
	<select id="findRsvCISvc" resultType="_int" parameterType="com.kh.hotels.mngRooms.model.vo.CheckIn">
		SELECT SVC_NO
		FROM SVC_USE
		WHERE RSV_NO = #{rsvNo}
	</select>
	
	<insert id="insertRsvSvcHis" parameterType="com.kh.hotels.mngRooms.model.vo.CheckIn">
		INSERT INTO SVC_USE_HIS
		VALUES (#{svcNo}, 'STAY_NO', 'NULL', SEQ_STAY_NO.CURRVAL, TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), '예약고객입실')
	</insert>
	
	<update id="doCheckOutStay" parameterType="_int">
		UPDATE STAY
		SET STAY_STATUS = 'Y', MOD_DATE = TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), REAL_CO = TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss')
		WHERE STAY_NO = #{sno} 
	</update>
	
	<insert id="doCheckOutStayHis" parameterType="_int">
		INSERT ALL
		INTO STAY_HIS VALUES (#{sno}, TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), 'STAY_STATUS', 'N', 'Y', '고객퇴실')
		INTO STAY_HIS VALUES (#{sno}, TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), 'REAL_CO', 'NULL', TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), '고객퇴실')
		SELECT * FROM DUAL
	</insert>
	
	<select id="selectCOrmNo" parameterType="_int" resultType="_int">
		SELECT RM_NO
		FROM STAY
		WHERE STAY_NO = #{sno}
	</select>
	
	<insert id="updateRoomNoCleanCO" parameterType="_int">
		INSERT INTO ROOM_STT_HIS
		VALUES (#{rmNo}, 'Y', 'N', TO_CHAR(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60), 'YYYY-MM-DD HH24:mi:ss'), '고객퇴실')
	</insert>
	
	<select id="ajxFindRfdRate" resultMap="refundInfoSet" parameterType="java.lang.String">
		SELECT *
		FROM (SELECT *
		      FROM RFD
		      WHERE TERM_TYPE = CASE
		                          WHEN EXTRACT(MONTH FROM TO_DATE(#{checkin}, 'YYYY-MM-DD')) IN (1, 2, 7, 8, 12) THEN 'SEASON'
		                          ELSE 'OFFSEASON'
		                        END
		      AND DAY_TYPE = CASE
		                      WHEN TO_CHAR((TO_DATE(#{checkin}, 'YYYY-MM-DD')), 'd') IN (1, 6, 7) THEN 'WEEKEND'
		                      ELSE 'WEEK'
		                     END
		      AND RFD_DATE <![CDATA[ <= ]]> (TO_DATE(#{checkin}, 'YYYY-MM-DD')) - TRUNC(SYSDATE + 9 / (24) + 135 / (24 * 60 * 60))
		      ORDER BY TO_NUMBER(RFD_DATE) DESC)
		WHERE ROWNUM = 1
	</select>
	
	<select id="selectRsrList" parameterType="RequestStayRsv" resultMap="requestStayRsvResultSet">
		SELECT RSV_REQ, REQ_DATE, REQ_CONTENT, HDR_DATE, HDR_STATUS
		FROM RSV R
		JOIN STAY S ON(R.RSV_NO = S.RSV_NO)
		LEFT JOIN STAY_REQ_HIS SRH ON(S.STAY_NO = SRH.STAY_NO)
		WHERE SRH.STAY_NO = #{stayNo} OR R.RSV_NO = #{rsvNo}
	</select>
	
	<select id="insertMemo" parameterType="RsvMemo">
		INSERT INTO STAY_REQ_HIS(STAY_NO, REQ_DATE, REQ_CONTENT, HDR_DATE, HDR_STATUS)
		VALUES(#{stayNo},#{reqDate},#{reqContent},NULL,'N')
	</select>
	
	<!-- 문의내역 쿼리문  -->
	<!-- SELECT RSV_REQ, REQ_DATE, REQ_CONTENT, HDR_DATE, HDR_STATUS
FROM RSV R
JOIN STAY S ON(R.RSV_NO = S.RSV_NO)
LEFT JOIN STAY_REQ_HIS SRH ON(S.STAY_NO = SRH.STAY_NO)
WHERE SRH.STAY_NO = 62 OR R.RSV_NO = 20200208002; -->
</mapper>